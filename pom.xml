<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.uni-mannheim.informatik.dws</groupId>
    <artifactId>WiktionaryMatcher
    </artifactId><!-- id used as matcher id in descriptor file of seals package and as the project name in gitlab (hobbit) -->
    <packaging>jar</packaging>
    <version>1.0</version><!-- version appearing in descriptor file of seals package and system.ttl file in hobbit -->
    <description>WiktionaryMatcher uses Wiktionary to match ontologies.
    </description><!-- description appearing in descriptor file of seals package and system.ttl file in hobbit -->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <!-- mandatory: this class has to implement IOntologyMatchingToolBridge -->
        <oaei.mainClass>de.uni_mannheim.informatik.dws.WiktionaryMatcher.OrchestratingMatcher</oaei.mainClass>

        <oaei.copyright>(C) Jan Portisch, 2020
        </oaei.copyright> <!--optional copyright appearing in the seals descriptor file -->
        <oaei.license>GNU Lesser General Public License 2.1 or above
        </oaei.license> <!--optional license appearing in the seals descriptor file -->

        <maven.deploy.skip>true
        </maven.deploy.skip><!-- needed to call mvn deploy without having a distributionManagement -->
        <matching.version>3.2-SNAPSHOT</matching.version> <!-- version for all matching related packages -->
    </properties>

    <!-- Accessing the resources:
    - all files in "oaei-resources" folder are stored in the current working directory and can be accessed with
          Files.readAllLines(Paths.get("oaei-resources", "configuration_oaei.txt"));
    - all files in "src/main/resources" folder are compiled to the resulting jar and can be accessed with
          getClass().getClassLoader().getResourceAsStream("configuration_jar.txt");
    -->

    <dependencies>
        <!-- dependency for jena matchers - for other matchers you can replace it with artifactId: matching-base -->
        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>matching-jena</artifactId>
            <version>${matching.version}</version>
        </dependency>

        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>matching-eval</artifactId>
            <version>${matching.version}</version>
            <!--<scope>test</scope>-->
            <!-- only in test scope, can only be used when running tests.
                 You can also remove the scope but then remove the whole dependency when packaging the matcher.
                 Otherwise you get a lot of unused dependencies in your matcher.-->
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.5</version>
        </dependency>

        <!-- This dependency is necessary for hobbit submission. It contains the wrapper. -->
        <!--dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>hobbit-wrapper</artifactId>
            <version>${matching.version}</version>
        </dependency-->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.3.0-M1</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.3.0-M1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.mpkorstanje</groupId>
            <artifactId>simmetrics-core</artifactId>
            <version>4.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.mapdb</groupId>
            <artifactId>mapdb</artifactId>
            <version>3.0.7</version>
        </dependency>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-tdb</artifactId>
            <version>3.16.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-core</artifactId>
            <version>3.16.0</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.5</version>
        </dependency>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-arq</artifactId>
            <version>3.16.0</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!-- the following plugin will generate a seals assembly -->

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <dependencies>
                    <dependency>
                        <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
                        <artifactId>seals-assembly</artifactId>
                        <version>${matching.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <!--
                        there exists three descriptors:
                        1) "seals" - removes all dependencies available in seals client regardless of their version.
                        2) "seals_all_deps" - adds all dependencies of your project (please note that this can cause
                        problems when using jena for example)
                        3) "seals_external" - creates a wrapper around the matcher so that no inference with seals
                        happens(the matcher has to log to std err only).
                        -->
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>seals</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M3</version>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>maven.mannheim.releases</id>
            <url>https://breda.informatik.uni-mannheim.de/nexus/content/repositories/releases</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>maven.mannheim.releases</id>
            <url>https://breda.informatik.uni-mannheim.de/nexus/content/repositories/releases</url>
        </pluginRepository>
    </pluginRepositories>

</project>

        <!-- config example for settings file which is usually located at ~/.m2/settings.xml (you can create the file if it does not exist)
             username and password are used for pushing the docker image and privateKey is necessary for creating gitlab projects and system.ttl files:
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                              https://maven.apache.org/xsd/settings-1.0.0.xsd">
          <servers>
            <server>
              <id>git.project-hobbit.eu</id>
              <username>{username}</username>
              <password>{password}</password>
              <privateKey>{gitlab_access_token}</privateKey>
            </server>
          </servers>
        </settings>
        -->